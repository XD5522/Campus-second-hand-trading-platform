<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.campus_second_hand_trading_platform.dao.mapper.OrderMapper">
    <resultMap id="OrderMap" type="com.example.campus_second_hand_trading_platform.dao.entity.Order">
        <id property="id" column="id"/>
        <result property="productId" column="productId"/>
        <result property="buyer" column="buyer"/>
        <result property="seller" column="seller"/>
        <result property="createTime" column="createTime"/>
        <result property="finishTime" column="finishTime"/>
        <result property="trading" column="trading"/>
        <result property="couponId" column="couponId"/>
        <result property="productName" column="productName"/>
        <result property="productNum" column="productNum"/>
        <result property="couponPrice" column="couponPrice"/>
        <result property="buyer_payout" column="buyer_payout"/>
        <result property="seller_income" column="seller_income"/>
        <result property="total" column="total"/>
        <result property="state" column="state"/>
        <result property="flag" column="flag"/>
    </resultMap>
    <resultMap id="OrderVo" type="com.example.campus_second_hand_trading_platform.domain.vo.OrderVo">
        <id property="id" column="id"/>
        <result property="product_id" column="product_id"/>
        <result property="product_name" column="name"/>
        <result property="create_time" column="create_time"/>
        <result property="finish_time" column="finish_time"/>
        <result property="trading" column="trading"/>
        <result property="buyer" column="buyer"/>
        <result property="seller" column="seller"/>
        <result property="state" column="state"/>
    </resultMap>
    <resultMap id="OrderDetailVoMap" type="com.example.campus_second_hand_trading_platform.domain.vo.OrderDetailVo">
        <id property="id" column="id"/>
        <result property="create_time" column="create_time"/>
        <result property="finish_time" column="finish_time"/>
        <result property="seller_id" column="seller_id"/>
        <result property="seller_name" column="seller_name"/>
        <result property="seller_img" column="seller_img"/>
        <result property="buyer_id" column="buyer_id"/>
        <result property="buyer_name" column="buyer_name"/>
        <result property="buyer_img" column="buyer_img"/>
        <result property="address" column="address"/>
        <result property="product_id" column="product_id"/>
        <result property="product_name" column="product_name"/>
        <result property="product_img" column="product_img"/>
        <result property="product_num" column="product_num"/>
        <result property="price" column="price"/>
        <result property="coupon_id" column="coupon_id"/>
        <result property="coupon_type" column="coupon_type"/>
        <result property="total" column="total"/>
        <result property="buyer_payout" column="buyer_payout"/>
        <result property="trading" column="trading"/>
        <result property="state" column="state"/>
    </resultMap>
    <select id="GetOrderListById" parameterType="Int" resultMap="OrderVo">
        select `order`.*,name from `order` join product p on `order`.product_id = p.id
        where `order`.buyer = #{id}
    </select>
    <select id="GetOrderListByPage" parameterType="Int" resultMap="OrderVo">
        select `order`.*,name from `order` join product p on `order`.product_id = p.id
        where `order`.buyer = #{id}
    </select>
    <select id="GetOrderListByPageAndState"  resultMap="OrderVo">
        select `order`.*,name from `order` join product p on `order`.product_id = p.id
        where `order`.buyer = #{id} and `order`.state=#{state}
    </select>
    <select id="SellerGetOrderListByState"  resultMap="OrderVo">
        select `order`.*,name from `order` join product p on `order`.product_id = p.id
        where `order`.seller = #{id} and `order`.state=#{state}
    </select>
    <select id="GetOrderUnfinishedListByPage"  resultMap="OrderVo">
        select `order`.*,name from `order` join product p on `order`.product_id = p.id
        where `order`.buyer = #{id} and `order`.state!='已完成' and `order`.state!='已退货'
    </select>
    <update id="updateOrder">
        update `order` set state = #{state} where id = #{id}
    </update>
    <select id="GetPendingList" parameterType="Int" resultMap="OrderVo">
        select `order`.*,name from `order` join product p on `order`.product_id = p.id
        where `order`.buyer = #{id} and `order`.state = '待退货'
    </select>
    <select id="GetOrderDetail" resultMap="OrderDetailVoMap">
        select o.id,
               o.create_time,
               o.finish_time,
               o.seller as seller_id,
               seller.user_name as seller_name,
               seller.img as seller_img,
               o.buyer as buyer_id,
               buyer.user_name as buyer_name,
               buyer.img as buyer_img,
               o.address,
               o.product_id,
               p.name as product_name,
               p.img as product_img,
               p.price,
               o.product_num,
               o.coupon_id,
               c.type as coupon_type,
               o.total,
               o.buyer_payout,
               o.trading,
               o.state
        from `order` o
            join coupon c on c.id = o.coupon_id
            join user seller on seller.id = o.seller
            join user buyer on buyer.id = o.buyer
            join product p on p.id = o.product_id
        where o.id = #{id}
    </select>
    <select id="GetById" resultMap="OrderMap">
        select * from `order` where id = #{id} and flag = 0
    </select>
    <insert id="insertOrder" parameterType="com.example.campus_second_hand_trading_platform.dao.entity.Order">
        INSERT INTO `order` (product_id, buyer, seller, trading, coupon_id,
                             buyer_name, product_name, address, phone, product_num, coupon_price, buyer_payout,
                             seller_income, total)
        VALUES (#{productId}, #{buyer}, #{seller},  #{trading},
                #{couponId}, #{buyerName}, #{productName}, #{address}, #{phone}, #{productNum},
                #{couponPrice}, #{buyerPayout}, #{sellerIncome}, #{total})
    </insert>
</mapper>
